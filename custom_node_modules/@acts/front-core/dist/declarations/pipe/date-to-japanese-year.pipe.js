import { Pipe } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * DateToJapaneseYearPipe
 *
 * @export
 * @class DateToJapaneseYearPipe
 * @implements {PipeTransform}
 */
var DateToJapaneseYearPipe = /** @class */ (function () {
    function DateToJapaneseYearPipe() {
    }
    /**
     * Takes a value and makes it lowercase.
     */
    DateToJapaneseYearPipe.prototype.transform = function (dateObj, withDate) {
        if (withDate === void 0) { withDate = false; }
        if (!dateObj) {
            return null;
        }
        // Use DateTimeFormat for chrome
        if (this.isChrome()) {
            var options = withDate
                ? { era: 'long', year: 'numeric', month: 'long', day: 'numeric' }
                : { era: 'long', year: 'numeric' };
            return new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options).format(dateObj);
        }
        var year = dateObj.getFullYear();
        if (isNaN(year)) {
            return undefined;
        }
        var jDate = "" + year;
        for (var _i = 0, _a = DateToJapaneseYearPipe.eraDataList; _i < _a.length; _i++) {
            var eraData = _a[_i];
            var firstDate = eraData.firstDate;
            var name_1 = eraData.name;
            var eraFirstDateObj = new Date(firstDate);
            if (dateObj.getTime() - eraFirstDateObj.getTime() >= 0) {
                var eraYear = "" + (year - eraFirstDateObj.getFullYear() + 1);
                jDate = "" + name_1 + eraYear;
                break;
            }
        }
        var returnString = jDate + '年';
        if (withDate) {
            returnString =
                returnString +
                    (dateObj.getMonth() + 1) +
                    '月' +
                    dateObj.getDate() +
                    '日';
        }
        return returnString;
    };
    /**
     * Checks if browser is chrome or not
     *
     * @private
     * @returns {boolean}
     * @memberof DateToJapaneseYearPipe
     */
    DateToJapaneseYearPipe.prototype.isChrome = function () {
        var isChromium = window.chrome;
        var winNav = window.navigator;
        var vendorName = winNav.vendor;
        var isOpera = typeof window.opr !== 'undefined';
        var isIEedge = winNav.userAgent.indexOf('Edge') > -1;
        var isIOSChrome = winNav.userAgent.match('CriOS');
        if (isIOSChrome ||
            (isChromium !== null &&
                typeof isChromium !== 'undefined' &&
                vendorName === 'Google Inc.' &&
                isOpera === false &&
                isIEedge === false)) {
            return true;
        }
        else {
            return false;
        }
    };
    DateToJapaneseYearPipe.eraDataList = [
        {
            code: 'reiwa',
            firstDate: '2019-05-01',
            name: '令和'
        },
        {
            code: 'heisei',
            firstDate: '1989-01-08',
            name: '平成'
        },
        {
            code: 'showa',
            firstDate: '1926-12-25',
            name: '昭和'
        },
        {
            code: 'taisho',
            firstDate: '1912-07-30',
            name: '大正'
        },
        {
            code: 'meiji',
            firstDate: '1868-01-25',
            name: '明治'
        }
    ];
    DateToJapaneseYearPipe.ɵfac = function DateToJapaneseYearPipe_Factory(t) { return new (t || DateToJapaneseYearPipe)(); };
    DateToJapaneseYearPipe.ɵpipe = i0.ɵɵdefinePipe({ name: "dateToJapaneseYear", type: DateToJapaneseYearPipe, pure: true });
    return DateToJapaneseYearPipe;
}());
export { DateToJapaneseYearPipe };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DateToJapaneseYearPipe, [{
        type: Pipe,
        args: [{
                name: 'dateToJapaneseYear'
            }]
    }], null, null); })();
//# sourceMappingURL=date-to-japanese-year.pipe.js.map