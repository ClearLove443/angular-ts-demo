import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, Renderer2, ElementRef } from '@angular/core';
import { LoadingSpinnersService } from './loading-spinners.service';
import * as i0 from "@angular/core";
import * as i1 from "./loading-spinners.service";
function LoadingSpinnerComponent_div_0_img_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "img", 5);
} if (rf & 2) {
    var ctx_r3 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("src", ctx_r3.img, i0.ɵɵsanitizeUrl);
} }
function LoadingSpinnerComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 2);
    i0.ɵɵelementStart(1, "div", 3);
    i0.ɵɵtemplate(2, LoadingSpinnerComponent_div_0_img_2_Template, 1, 1, "img", 4);
    i0.ɵɵelementEnd();
    i0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = i0.ɵɵnextContext();
    var _r1 = i0.ɵɵreference(2);
    i0.ɵɵproperty("ngClass", ctx_r0.showLoader ? "visible" : "hidden");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.img)("ngIfElse", _r1);
} }
function LoadingSpinnerComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 6);
    i0.ɵɵelement(1, "div", 7);
    i0.ɵɵelement(2, "div", 8);
    i0.ɵɵelement(3, "div", 9);
    i0.ɵɵelement(4, "div", 10);
    i0.ɵɵelement(5, "div", 11);
    i0.ɵɵelement(6, "div", 12);
    i0.ɵɵelement(7, "div", 13);
    i0.ɵɵelement(8, "div", 14);
    i0.ɵɵelement(9, "div", 15);
    i0.ɵɵelement(10, "div", 16);
    i0.ɵɵelement(11, "div", 17);
    i0.ɵɵelement(12, "div", 18);
    i0.ɵɵelementEnd();
} }
var LoadingSpinnerComponent = /** @class */ (function () {
    function LoadingSpinnerComponent(loadingSpinnersService, cd, renderer2, el) {
        this.loadingSpinnersService = loadingSpinnersService;
        this.cd = cd;
        this.renderer2 = renderer2;
        this.el = el;
        this._showLoader = false;
        this._defaultImage = this.loadingSpinnersService.defaultSpinnerFilePath;
        this._minHeight = '100%';
    }
    LoadingSpinnerComponent.prototype.ngOnInit = function () {
        this.createServiceSubscription();
    };
    LoadingSpinnerComponent.prototype.ngAfterViewInit = function () {
        this.renderer2.setStyle(this.el.nativeElement.parentNode, 'min-height', this.minHeight);
    };
    Object.defineProperty(LoadingSpinnerComponent.prototype, "name", {
        get: function () {
            return this._name;
        },
        set: function (value) {
            this._name = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LoadingSpinnerComponent.prototype, "img", {
        get: function () {
            return this._img || this._defaultImage;
        },
        set: function (value) {
            this._img = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LoadingSpinnerComponent.prototype, "minHeight", {
        get: function () {
            return this._minHeight;
        },
        set: function (value) {
            this._minHeight = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LoadingSpinnerComponent.prototype, "show", {
        set: function (value) {
            this._showLoader = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LoadingSpinnerComponent.prototype, "defaultImage", {
        get: function () {
            return this._defaultImage;
        },
        enumerable: false,
        configurable: true
    });
    LoadingSpinnerComponent.prototype.createServiceSubscription = function () {
        var _this = this;
        this.subscription =
            this.loadingSpinnersService.loaderObservable.subscribe(function (obj) {
                if (obj.name === _this._name) {
                    if (obj.show) {
                        _this._showLoader = true;
                        _this.renderer2.setStyle(_this.el.nativeElement.parentNode, 'position', 'relative');
                        _this.renderer2.setStyle(_this.el.nativeElement.parentNode, 'box-sizing', 'border-box');
                    }
                    else {
                        _this._showLoader = false;
                    }
                    _this.cd.detectChanges();
                }
            });
    };
    Object.defineProperty(LoadingSpinnerComponent.prototype, "showLoader", {
        get: function () {
            return this._showLoader;
        },
        enumerable: false,
        configurable: true
    });
    LoadingSpinnerComponent.prototype.ngOnDestroy = function () {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    };
    LoadingSpinnerComponent.ɵfac = function LoadingSpinnerComponent_Factory(t) { return new (t || LoadingSpinnerComponent)(i0.ɵɵdirectiveInject(i1.LoadingSpinnersService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef)); };
    LoadingSpinnerComponent.ɵcmp = i0.ɵɵdefineComponent({ type: LoadingSpinnerComponent, selectors: [["ngx-loading-spinner"]], inputs: { name: "name", img: "img", minHeight: "minHeight", show: "show" }, decls: 3, vars: 1, consts: [["class", "spinner center", "id", "custom-loader-id", 3, "ngClass", 4, "ngIf"], ["defaultTemplate", ""], ["id", "custom-loader-id", 1, "spinner", "center", 3, "ngClass"], [1, "loader"], [3, "src", 4, "ngIf", "ngIfElse"], [3, "src"], [1, "sk-fading-circle"], [1, "sk-circle1", "sk-circle"], [1, "sk-circle2", "sk-circle"], [1, "sk-circle3", "sk-circle"], [1, "sk-circle4", "sk-circle"], [1, "sk-circle5", "sk-circle"], [1, "sk-circle6", "sk-circle"], [1, "sk-circle7", "sk-circle"], [1, "sk-circle8", "sk-circle"], [1, "sk-circle9", "sk-circle"], [1, "sk-circle10", "sk-circle"], [1, "sk-circle11", "sk-circle"], [1, "sk-circle12", "sk-circle"]], template: function LoadingSpinnerComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵtemplate(0, LoadingSpinnerComponent_div_0_Template, 3, 3, "div", 0);
            i0.ɵɵtemplate(1, LoadingSpinnerComponent_ng_template_1_Template, 13, 0, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
        } if (rf & 2) {
            i0.ɵɵproperty("ngIf", ctx.showLoader);
        } }, styles: [".spinner[_ngcontent-%COMP%] {\n  position: absolute !important;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  background: rgba(0, 0, 0, 0.21);\n}\n\n.loader[_ngcontent-%COMP%] {\n  position: absolute !important;\n  top: 50%;\n  right: 0;\n  left: 0;\n  width: auto;\n  height: 100%;\n  text-align: center;\n  transform: translateY(-50%);\n  img {\n    height: 100%;\n  }\n}\n\n.center[_ngcontent-%COMP%] {\n  width: 100%;\n  margin: auto;\n}\n\n.visible[_ngcontent-%COMP%] {\n  visibility: visible !important;\n}\n\n.hidden[_ngcontent-%COMP%] {\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0s 0.3s, opacity 0.3s linear;\n}\n\n.sk-fading-circle[_ngcontent-%COMP%] {\n  position: relative;\n  top: 50%;\n  width: 40px;\n  height: 40px;\n  margin: 0 auto;\n  transform: translateY(-50%);\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle[_ngcontent-%COMP%]:before {\n  display: block;\n  width: 15%;\n  height: 15%;\n  margin: 0 auto;\n  background-color: #333;\n  border-radius: 100%;\n  -webkit-animation: sk-circleFadeDelay 1.2s infinite ease-in-out both;\n  animation: sk-circleFadeDelay 1.2s infinite ease-in-out both;\n  content: '';\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle2[_ngcontent-%COMP%] {\n  -webkit-transform: rotate(30deg);\n  -ms-transform: rotate(30deg);\n  transform: rotate(30deg);\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle3[_ngcontent-%COMP%] {\n  -webkit-transform: rotate(60deg);\n  -ms-transform: rotate(60deg);\n  transform: rotate(60deg);\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle4[_ngcontent-%COMP%] {\n  -webkit-transform: rotate(90deg);\n  -ms-transform: rotate(90deg);\n  transform: rotate(90deg);\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle5[_ngcontent-%COMP%] {\n  -webkit-transform: rotate(120deg);\n  -ms-transform: rotate(120deg);\n  transform: rotate(120deg);\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle6[_ngcontent-%COMP%] {\n  -webkit-transform: rotate(150deg);\n  -ms-transform: rotate(150deg);\n  transform: rotate(150deg);\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle7[_ngcontent-%COMP%] {\n  -webkit-transform: rotate(180deg);\n  -ms-transform: rotate(180deg);\n  transform: rotate(180deg);\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle8[_ngcontent-%COMP%] {\n  -webkit-transform: rotate(210deg);\n  -ms-transform: rotate(210deg);\n  transform: rotate(210deg);\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle9[_ngcontent-%COMP%] {\n  -webkit-transform: rotate(240deg);\n  -ms-transform: rotate(240deg);\n  transform: rotate(240deg);\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle10[_ngcontent-%COMP%] {\n  -webkit-transform: rotate(270deg);\n  -ms-transform: rotate(270deg);\n  transform: rotate(270deg);\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle11[_ngcontent-%COMP%] {\n  -webkit-transform: rotate(300deg);\n  -ms-transform: rotate(300deg);\n  transform: rotate(300deg);\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle12[_ngcontent-%COMP%] {\n  -webkit-transform: rotate(330deg);\n  -ms-transform: rotate(330deg);\n  transform: rotate(330deg);\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle2[_ngcontent-%COMP%]:before {\n  -webkit-animation-delay: -1.1s;\n  animation-delay: -1.1s;\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle3[_ngcontent-%COMP%]:before {\n  -webkit-animation-delay: -1s;\n  animation-delay: -1s;\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle4[_ngcontent-%COMP%]:before {\n  -webkit-animation-delay: -0.9s;\n  animation-delay: -0.9s;\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle5[_ngcontent-%COMP%]:before {\n  -webkit-animation-delay: -0.8s;\n  animation-delay: -0.8s;\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle6[_ngcontent-%COMP%]:before {\n  -webkit-animation-delay: -0.7s;\n  animation-delay: -0.7s;\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle7[_ngcontent-%COMP%]:before {\n  -webkit-animation-delay: -0.6s;\n  animation-delay: -0.6s;\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle8[_ngcontent-%COMP%]:before {\n  -webkit-animation-delay: -0.5s;\n  animation-delay: -0.5s;\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle9[_ngcontent-%COMP%]:before {\n  -webkit-animation-delay: -0.4s;\n  animation-delay: -0.4s;\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle10[_ngcontent-%COMP%]:before {\n  -webkit-animation-delay: -0.3s;\n  animation-delay: -0.3s;\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle11[_ngcontent-%COMP%]:before {\n  -webkit-animation-delay: -0.2s;\n  animation-delay: -0.2s;\n}\n\n.sk-fading-circle[_ngcontent-%COMP%]   .sk-circle12[_ngcontent-%COMP%]:before {\n  -webkit-animation-delay: -0.1s;\n  animation-delay: -0.1s;\n}\n\n@-webkit-keyframes sk-circleFadeDelay {\n  0%,\n  39%,\n  100% {\n    opacity: 0;\n  }\n\n  40% {\n    opacity: 1;\n  }\n}\n\n@keyframes sk-circleFadeDelay {\n  0%,\n  39%,\n  100% {\n    opacity: 0;\n  }\n\n  40% {\n    opacity: 1;\n  }\n}"], changeDetection: 0 });
    return LoadingSpinnerComponent;
}());
export { LoadingSpinnerComponent };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(LoadingSpinnerComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-loading-spinner',
                template: "<div *ngIf=\"showLoader\" [ngClass]=\"showLoader ? 'visible' : 'hidden'\" class=\"spinner center\" id=\"custom-loader-id\"> <div class=\"loader\"> <img *ngIf='img else defaultTemplate' [src]=\"img\"> </div> </div> <ng-template #defaultTemplate> <div class=\"sk-fading-circle\"> <div class=\"sk-circle1 sk-circle\"></div> <div class=\"sk-circle2 sk-circle\"></div> <div class=\"sk-circle3 sk-circle\"></div> <div class=\"sk-circle4 sk-circle\"></div> <div class=\"sk-circle5 sk-circle\"></div> <div class=\"sk-circle6 sk-circle\"></div> <div class=\"sk-circle7 sk-circle\"></div> <div class=\"sk-circle8 sk-circle\"></div> <div class=\"sk-circle9 sk-circle\"></div> <div class=\"sk-circle10 sk-circle\"></div> <div class=\"sk-circle11 sk-circle\"></div> <div class=\"sk-circle12 sk-circle\"></div> </div> </ng-template> ",
                styles: [".spinner { position: absolute !important; top: 0; left: 0; width: 100%; height: 100%; padding: 0; background: rgba(0, 0, 0, 0.21); } .loader { position: absolute !important; top: 50%; right: 0; left: 0; width: auto; height: 100%; text-align: center; transform: translateY(-50%); img { height: 100%; } } .center { width: 100%; margin: auto; } .visible { visibility: visible !important; } .hidden { visibility: hidden; opacity: 0; transition: visibility 0s 0.3s, opacity 0.3s linear; } .sk-fading-circle { position: relative; top: 50%; width: 40px; height: 40px; margin: 0 auto; transform: translateY(-50%); } .sk-fading-circle .sk-circle { position: absolute; top: 0; left: 0; width: 100%; height: 100%; } .sk-fading-circle .sk-circle:before { display: block; width: 15%; height: 15%; margin: 0 auto; background-color: #333; border-radius: 100%; -webkit-animation: sk-circleFadeDelay 1.2s infinite ease-in-out both; animation: sk-circleFadeDelay 1.2s infinite ease-in-out both; content: ''; } .sk-fading-circle .sk-circle2 { -webkit-transform: rotate(30deg); -ms-transform: rotate(30deg); transform: rotate(30deg); } .sk-fading-circle .sk-circle3 { -webkit-transform: rotate(60deg); -ms-transform: rotate(60deg); transform: rotate(60deg); } .sk-fading-circle .sk-circle4 { -webkit-transform: rotate(90deg); -ms-transform: rotate(90deg); transform: rotate(90deg); } .sk-fading-circle .sk-circle5 { -webkit-transform: rotate(120deg); -ms-transform: rotate(120deg); transform: rotate(120deg); } .sk-fading-circle .sk-circle6 { -webkit-transform: rotate(150deg); -ms-transform: rotate(150deg); transform: rotate(150deg); } .sk-fading-circle .sk-circle7 { -webkit-transform: rotate(180deg); -ms-transform: rotate(180deg); transform: rotate(180deg); } .sk-fading-circle .sk-circle8 { -webkit-transform: rotate(210deg); -ms-transform: rotate(210deg); transform: rotate(210deg); } .sk-fading-circle .sk-circle9 { -webkit-transform: rotate(240deg); -ms-transform: rotate(240deg); transform: rotate(240deg); } .sk-fading-circle .sk-circle10 { -webkit-transform: rotate(270deg); -ms-transform: rotate(270deg); transform: rotate(270deg); } .sk-fading-circle .sk-circle11 { -webkit-transform: rotate(300deg); -ms-transform: rotate(300deg); transform: rotate(300deg); } .sk-fading-circle .sk-circle12 { -webkit-transform: rotate(330deg); -ms-transform: rotate(330deg); transform: rotate(330deg); } .sk-fading-circle .sk-circle2:before { -webkit-animation-delay: -1.1s; animation-delay: -1.1s; } .sk-fading-circle .sk-circle3:before { -webkit-animation-delay: -1s; animation-delay: -1s; } .sk-fading-circle .sk-circle4:before { -webkit-animation-delay: -0.9s; animation-delay: -0.9s; } .sk-fading-circle .sk-circle5:before { -webkit-animation-delay: -0.8s; animation-delay: -0.8s; } .sk-fading-circle .sk-circle6:before { -webkit-animation-delay: -0.7s; animation-delay: -0.7s; } .sk-fading-circle .sk-circle7:before { -webkit-animation-delay: -0.6s; animation-delay: -0.6s; } .sk-fading-circle .sk-circle8:before { -webkit-animation-delay: -0.5s; animation-delay: -0.5s; } .sk-fading-circle .sk-circle9:before { -webkit-animation-delay: -0.4s; animation-delay: -0.4s; } .sk-fading-circle .sk-circle10:before { -webkit-animation-delay: -0.3s; animation-delay: -0.3s; } .sk-fading-circle .sk-circle11:before { -webkit-animation-delay: -0.2s; animation-delay: -0.2s; } .sk-fading-circle .sk-circle12:before { -webkit-animation-delay: -0.1s; animation-delay: -0.1s; } @-webkit-keyframes sk-circleFadeDelay { 0%, 39%, 100% { opacity: 0; } 40% { opacity: 1; } } @keyframes sk-circleFadeDelay { 0%, 39%, 100% { opacity: 0; } 40% { opacity: 1; } } "],
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: i1.LoadingSpinnersService }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.ElementRef }]; }, { name: [{
            type: Input
        }], img: [{
            type: Input
        }], minHeight: [{
            type: Input
        }], show: [{
            type: Input
        }] }); })();
//# sourceMappingURL=loading-spinner.component.js.map