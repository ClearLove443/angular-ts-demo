import { Observable } from 'rxjs';
import { QueryEntity } from '@datorama/akita';
import { Auth } from './auth.model';
import { AuthState, AuthStore } from './auth.store';
import * as i0 from "@angular/core";
/**
 * AuthQuery
 *
 * @export
 * @class AuthQuery
 * @extends {QueryEntity<AuthState, Auth>}
 */
export declare class AuthQuery extends QueryEntity<AuthState, Auth> {
    protected store: AuthStore;
    constructor(store: AuthStore);
    /**
     * Observable logged in state
     *
     * @memberof AuthQuery
     */
    isLoggedIn$: Observable<boolean>;
    /**
     * Pick token
     *
     * @memberof AuthQuery
     */
    getAuthorizationToken(): string;
    /**
     * Pick token
     *
     * @memberof AuthQuery
     */
    getRefreshToken(): string;
    /**
     * Pick user ID
     *
     * @memberof AuthQuery
     */
    getUserId(): string;
    /**
     * is login
     *
     * @memberof AuthQuery
     */
    isLogin(): boolean;
    static ɵfac: i0.ɵɵFactoryDef<AuthQuery, never>;
    static ɵprov: i0.ɵɵInjectableDef<AuthQuery>;
}
