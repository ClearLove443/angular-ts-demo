import { Subscription } from 'rxjs';
import { HttpClient } from '@angular/common/http';
import { CoreEnvironmentManager } from '../core.environment';
import { AuthCredential } from './auth.model';
import { AuthStore } from './auth.store';
import * as i0 from "@angular/core";
/**
 * Auth business logic
 *
 * @export
 * @class AuthInterceptor
 * @implements {HttpInterceptor}
 */
export declare class AuthService {
    private httpClient;
    private environment;
    protected authStore: AuthStore;
    constructor(httpClient: HttpClient, environment: CoreEnvironmentManager, authStore: AuthStore);
    /**
     * login
     *
     * @param {AuthCredential} credos
     * @returns
     * @memberof AuthService
     */
    login(credos: AuthCredential): Subscription;
    /**
     * logout
     *
     * @memberof AuthService
     */
    logout(): void;
    static ɵfac: i0.ɵɵFactoryDef<AuthService, never>;
    static ɵprov: i0.ɵɵInjectableDef<AuthService>;
}
