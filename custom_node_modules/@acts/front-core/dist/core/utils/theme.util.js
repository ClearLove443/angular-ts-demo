import { DOCUMENT } from '@angular/common';
import { Inject, Injectable, RendererFactory2 } from '@angular/core';
import { CoreService } from '../core-state/core.service';
import * as i0 from "@angular/core";
import * as i1 from "../core-state/core.service";
/**
 * Dynamic theme changer
 *
 * @export
 * @class ThemeUtil
 */
var ThemeUtil = /** @class */ (function () {
    /**
     * Creates an instance of ThemeUtil.
     * @param {*} document
     * @param {RendererFactory2} rendererFactory
     * @memberof ThemeUtil
     */
    function ThemeUtil(document, rendererFactory, coreService) {
        this.document = document;
        this.rendererFactory = rendererFactory;
        this.coreService = coreService;
        this.renderer = this.rendererFactory.createRenderer(null, null);
    }
    /**
     * get body color
     *
     * @param {string} bodyClass
     * @memberof ThemeUtil
     */
    ThemeUtil.prototype.addBodyClass = function (bodyClass) {
        this.renderer.addClass(this.document.body, bodyClass);
        this.coreService.theme(bodyClass);
    };
    /**
     * remove body class
     *
     * @param {string} bodyClass
     * @memberof ThemeUtil
     */
    ThemeUtil.prototype.removeBodyClass = function (bodyClass) {
        this.renderer.removeClass(this.document.body, bodyClass);
        this.coreService.theme(undefined);
    };
    /**
     * get defined theme color
     *
     * @param {string} name
     * @returns
     * @memberof ThemeUtil
     */
    ThemeUtil.prototype.getThemeColor = function (name) {
        var style = getComputedStyle(this.document.body);
        return style.getPropertyValue(name);
    };
    ThemeUtil.ɵfac = function ThemeUtil_Factory(t) { return new (t || ThemeUtil)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(i1.CoreService)); };
    ThemeUtil.ɵprov = i0.ɵɵdefineInjectable({ token: ThemeUtil, factory: ThemeUtil.ɵfac });
    return ThemeUtil;
}());
export { ThemeUtil };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(ThemeUtil, [{
        type: Injectable
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [DOCUMENT]
            }] }, { type: i0.RendererFactory2 }, { type: i1.CoreService }]; }, null); })();
//# sourceMappingURL=theme.util.js.map