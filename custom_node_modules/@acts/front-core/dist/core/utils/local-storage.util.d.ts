/**
 * Define the storage service uses local storage
 *
 * @export
 * @class LocalStorageUtil
 */
export declare class LocalStorageUtil {
    /**
     * Gets the value from storage
     *
     * @param {string} key storage key
     * @returns {*} value
     * @memberof LocalStorageUtil
     */
    static GET(key: string): any;
    /**
     * Get the key/value of the specified key from local storage.
     * Key can be set as regular expression.
     * If the key is not set, return all key/value.
     *
     * @static
     * @param {string} [key]
     * @returns {object}
     * @memberof LocalStorageUtil
     */
    static GET_ITEMS(key?: string): object;
    /**
     * Determine whether the key is included in local storage or not
     *
     * @static
     * @param {string} key
     * @returns {boolean}
     * @memberof LocalStorageUtil
     */
    static HAS(key: string | RegExp): boolean;
    /**
     * Sets the value to storage
     *
     * @param {string} key storage key
     * @param {*} value store value
     * @memberof LocalStorageUtil
     */
    static SET(key: string, value: any): void;
    /**
     * Remove the specified item.
     *
     * @param {string} key storage key
     * @memberof LocalStorageUtil
     */
    static REMOVE(key: string): void;
    /**
     * Remove the all local storage items matching the key
     *
     * @static
     * @param {string} key
     * @memberof LocalStorageUtil
     */
    static REMOVE_ITEMS(key: string): void;
}
