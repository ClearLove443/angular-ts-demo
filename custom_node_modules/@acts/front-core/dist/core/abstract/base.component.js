import { ChangeDetectorRef, Directive, Injector, Input } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Base component
 *
 * @export
 * @class BaseComponent
 */
var BaseComponent = /** @class */ (function () {
    /**
     * Creates an instance of BaseComponent.
     * @param {Injector} injector
     * @memberof BaseComponent
     */
    function BaseComponent(injector) {
        this.injector = injector;
        // tslint:disable-next-line: deprecation
        this.cd = injector.get(ChangeDetectorRef);
    }
    /**
     * get track item no
     *
     * @param {*} index
     * @returns
     * @memberof BaseComponent
     */
    BaseComponent.prototype.trackItem = function (index) {
        return index;
    };
    BaseComponent.ɵfac = function BaseComponent_Factory(t) { return new (t || BaseComponent)(i0.ɵɵdirectiveInject(i0.Injector)); };
    BaseComponent.ɵdir = i0.ɵɵdefineDirective({ type: BaseComponent, inputs: { errorMessage: "errorMessage" } });
    return BaseComponent;
}());
export { BaseComponent };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(BaseComponent, [{
        type: Directive
    }], function () { return [{ type: i0.Injector }]; }, { errorMessage: [{
            type: Input
        }] }); })();
//# sourceMappingURL=base.component.js.map