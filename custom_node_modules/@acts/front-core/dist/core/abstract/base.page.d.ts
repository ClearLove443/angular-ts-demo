import { Injector, OnInit } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { BaseComponent } from './base.component';
import * as i0 from "@angular/core";
/**
 * Base page
 *
 * @export
 * @class BasePage
 */
export declare class BasePage extends BaseComponent implements OnInit {
    injector: Injector;
    /**
     * ScreenName for Analytics
     *
     * @memberof BasePage
     */
    screenName: string;
    /**
     * Creates an instance of BasePage.
     * @param {Injector} injector
     * @memberof BasePage
     */
    constructor(injector: Injector);
    /**
     * angular life cycle hook
     *
     * @memberof BasePage
     */
    ngOnInit(): void;
    /**
     * get class name
     *
     * @readonly
     * @type {string}
     * @memberof BasePage
     */
    get className(): string;
    /**
     * Set Validation Error to Form
     *
     * @protected
     * @param {FormGroup} form
     * @param {*} error
     * @param {boolean} [givePriorityToGlobalError=false] Ignore field errors if "true" is experiencing global errors.
     * @returns {void}
     * @memberof BasePage
     */
    protected setFormError(form: FormGroup, error: any, givePriorityToGlobalError?: boolean): void;
    static ɵfac: i0.ɵɵFactoryDef<BasePage, never>;
    static ɵdir: i0.ɵɵDirectiveDefWithMeta<BasePage, never, never, {}, {}, never>;
}
