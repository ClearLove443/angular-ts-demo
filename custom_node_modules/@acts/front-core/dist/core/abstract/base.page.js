var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Directive, Injector } from '@angular/core';
import { BaseComponent } from './base.component';
import * as i0 from "@angular/core";
/**
 * Base page
 *
 * @export
 * @class BasePage
 */
var BasePage = /** @class */ (function (_super) {
    __extends(BasePage, _super);
    /**
     * Creates an instance of BasePage.
     * @param {Injector} injector
     * @memberof BasePage
     */
    function BasePage(injector) {
        var _this = 
        // tslint:disable-next-line: deprecation
        _super.call(this, injector) || this;
        _this.injector = injector;
        /**
         * ScreenName for Analytics
         *
         * @memberof BasePage
         */
        _this.screenName = undefined;
        return _this;
    }
    /**
     * angular life cycle hook
     *
     * @memberof BasePage
     */
    BasePage.prototype.ngOnInit = function () {
        var pageName = this.screenName ? this.screenName : this.className;
        console.log(pageName);
    };
    Object.defineProperty(BasePage.prototype, "className", {
        /**
         * get class name
         *
         * @readonly
         * @type {string}
         * @memberof BasePage
         */
        get: function () {
            return this.constructor.name;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Set Validation Error to Form
     *
     * @protected
     * @param {FormGroup} form
     * @param {*} error
     * @param {boolean} [givePriorityToGlobalError=false] Ignore field errors if "true" is experiencing global errors.
     * @returns {void}
     * @memberof BasePage
     */
    BasePage.prototype.setFormError = function (form, error, givePriorityToGlobalError) {
        if (givePriorityToGlobalError === void 0) { givePriorityToGlobalError = false; }
        if (!error || !error.validationError) {
            return;
        }
        var validationError = error.validationError;
        var isGlobalError = validationError.global && validationError.global.length > 0;
        if (isGlobalError) {
            var messageArray = validationError.global;
            var messageStr = [];
            for (var index = 0; index < messageArray.length; index++) {
                messageStr.push(messageArray[index].message);
            }
            if (form.controls['global']) {
                form.controls['global'].setErrors({ incorrect: messageStr.join('\n') });
            }
        }
        if ((!givePriorityToGlobalError && validationError.fields) ||
            (givePriorityToGlobalError && !isGlobalError && validationError.fields)) {
            var messageStr_1 = {};
            validationError.fields.forEach(function (fieldErr) {
                if (!messageStr_1[fieldErr.field]) {
                    messageStr_1[fieldErr.field] = [];
                }
                messageStr_1[fieldErr.field].push(fieldErr.message);
            });
            for (var _i = 0, _a = Object.entries(messageStr_1); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                if (form.controls[key] && value instanceof Array) {
                    form.controls[key].setErrors({
                        incorrect: value.join('\n')
                    });
                }
            }
        }
    };
    BasePage.ɵfac = function BasePage_Factory(t) { return new (t || BasePage)(i0.ɵɵdirectiveInject(i0.Injector)); };
    BasePage.ɵdir = i0.ɵɵdefineDirective({ type: BasePage, features: [i0.ɵɵInheritDefinitionFeature] });
    return BasePage;
}(BaseComponent));
export { BasePage };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(BasePage, [{
        type: Directive
    }], function () { return [{ type: i0.Injector }]; }, null); })();
//# sourceMappingURL=base.page.js.map