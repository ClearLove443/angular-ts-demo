import { Observable } from 'rxjs';
import { QueryEntity } from '@datorama/akita';
import { Core, CoreConfig, CoreMaintenance, CoreUserConfig, CoreVersion } from './core.model';
import { CoreState, CoreStore } from './core.store';
import * as i0 from "@angular/core";
/**
 * CoreQuery
 *
 * @export
 * @class CoreQuery
 * @extends {QueryEntity<CoreState, Core>}
 */
export declare class CoreQuery extends QueryEntity<CoreState, Core> {
    protected store: CoreStore;
    constructor(store: CoreStore);
    loading$: Observable<boolean>;
    loadingType$: Observable<string>;
    theme$: Observable<string>;
    version$: Observable<CoreVersion>;
    maintenance$: Observable<CoreMaintenance>;
    config$: Observable<CoreConfig>;
    userConfig$: Observable<CoreUserConfig[]>;
    /**
     * Pick theme
     *
     * @memberof CoreQuery
     */
    getTheme(): string;
    /**
     * Pick loading type
     *
     * @memberof CoreQuery
     */
    getLoadingType(): string;
    static ɵfac: i0.ɵɵFactoryDef<CoreQuery, never>;
    static ɵprov: i0.ɵɵInjectableDef<CoreQuery>;
}
