var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { Injectable } from '@angular/core';
import { CoreStore } from './core.store';
import * as i0 from "@angular/core";
import * as i1 from "./core.store";
/**
 * Core Service
 *
 * @export
 * @class CoreService
 */
var CoreService = /** @class */ (function () {
    /**
     * Creates an instance of CoreService.
     * @param {AngularFirestore} afs
     * @param {CoreStore} coreStore
     * @memberof CoreService
     */
    function CoreService(coreStore) {
        this.coreStore = coreStore;
    }
    /**
     * loading state change
     *
     * @param {boolean} show
     * @memberof AuthService
     */
    CoreService.prototype.loading = function (show, loadingType) {
        if (loadingType === void 0) { loadingType = 'default'; }
        this.coreStore.update(function (state) { return ({
            core: __assign(__assign({}, state.core), { loading: show, loadingType: loadingType })
        }); });
    };
    /**
     * theme state change
     *
     * @param {string} theme
     * @memberof AuthService
     */
    CoreService.prototype.theme = function (theme) {
        this.coreStore.update(function (state) { return ({
            core: __assign(__assign({}, state.core), { theme: theme })
        }); });
    };
    CoreService.ɵfac = function CoreService_Factory(t) { return new (t || CoreService)(i0.ɵɵinject(i1.CoreStore)); };
    CoreService.ɵprov = i0.ɵɵdefineInjectable({ token: CoreService, factory: CoreService.ɵfac });
    return CoreService;
}());
export { CoreService };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(CoreService, [{
        type: Injectable
    }], function () { return [{ type: i1.CoreStore }]; }, null); })();
//# sourceMappingURL=core.service.js.map