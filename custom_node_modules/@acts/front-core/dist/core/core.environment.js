import { Inject, Injectable, InjectionToken } from '@angular/core';
import * as i0 from "@angular/core";
export var CORE_ENVIRONMENT = new InjectionToken('Core module env');
/**
 * core module env state manager
 *
 * @export
 * @class CoreEnvironmentManager
 */
var CoreEnvironmentManager = /** @class */ (function () {
    /**
     * Creates an instance of CoreEnvironmentManager.
     * @param {CoreEnvironment} coreModuleEnv
     * @memberof CoreEnvironmentManager
     */
    function CoreEnvironmentManager(coreModuleEnv) {
        this.coreModuleEnv = coreModuleEnv;
    }
    Object.defineProperty(CoreEnvironmentManager.prototype, "env", {
        /**
         * get core module env state
         *
         * @readonly
         * @type {CoreEnvironment}
         * @memberof CoreEnvironmentManager
         */
        get: function () {
            return this.coreModuleEnv;
        },
        enumerable: false,
        configurable: true
    });
    CoreEnvironmentManager.ɵfac = function CoreEnvironmentManager_Factory(t) { return new (t || CoreEnvironmentManager)(i0.ɵɵinject(CORE_ENVIRONMENT)); };
    CoreEnvironmentManager.ɵprov = i0.ɵɵdefineInjectable({ token: CoreEnvironmentManager, factory: CoreEnvironmentManager.ɵfac });
    return CoreEnvironmentManager;
}());
export { CoreEnvironmentManager };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(CoreEnvironmentManager, [{
        type: Injectable
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [CORE_ENVIRONMENT]
            }] }]; }, null); })();
//# sourceMappingURL=core.environment.js.map