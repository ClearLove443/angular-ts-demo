import { Observable } from 'rxjs';
/**
 * nonNilUntilDestroy
 *
 * @param {*} componentInstance
 * @param {string} [destroyMethodName]
 */
export declare const nonNilUntilDestroy: (componentInstance: any, destroyMethodName?: string) => <T>(source: Observable<T>) => Observable<NonNullable<T>>;
/**
 * changedUntilDestroy
 *
 * @param {*} componentInstance
 * @param {*} [changeConditions=undefined]
 * @param {string} [destroyMethodName]
 */
export declare const changedUntilDestroy: (componentInstance: any, changeConditions?: any, destroyMethodName?: string) => <T>(source: Observable<T>) => Observable<T>;
/**
 * nonNilChangedUntilDestroy
 *
 * @param {*} componentInstance
 * @param {*} [changeConditions=undefined]
 * @param {string} [destroyMethodName]
 */
export declare const nonNilChangedUntilDestroy: (componentInstance: any, changeConditions?: any, destroyMethodName?: string) => <T>(source: Observable<T>) => Observable<NonNullable<T>>;
